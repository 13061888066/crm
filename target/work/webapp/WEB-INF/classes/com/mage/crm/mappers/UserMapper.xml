<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mage.crm.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.mage.crm.vo.User">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="true_name" property="trueName"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="is_valid" property="isValid"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_name, user_pwd, true_name, email, phone, is_valid, create_date, update_date
    </sql>

    <sql id="user_columns">
        u.id,u.user_name as userName,u.true_name as trueName,u.email,u.phone,
        u.create_date as createDate,u.update_date as updateDate
    </sql>

    <select id="queryUsersByParams" parameterType="userQuery" resultType="userDto">
        select <include refid="user_columns"></include>,
        GROUP_CONCAT(r.role_name SEPARATOR '-') AS roleName,
        GROUP_CONCAT(r.id ) AS roleIdsStr
        from t_user u
        left join t_user_role ur
        on u.id = ur.user_id
        left join t_role r
        on ur.role_id = r.id
        <where>
            u.is_valid = 1
            <if test="userName !=null and userName!=''">
                and u.user_name like concat('%',#{userName},'%')
            </if>
            <if test="trueName !=null and trueName!=''">
                and u.true_name like concat('%',#{trueName},'%')
            </if>
            <if test="email !=null and email!=''">
                and u.email like concat('%',#{email},'%')
            </if>
            <if test="phone !=null and phone!=''">
                and u.phone like concat('%',#{phone},'%')
            </if>
        </where>
        group by u.id
    </select>

    <select id="queryAllCustomerManager" resultMap="BaseResultMap">
        select
            true_name
        from t_user u
        left join t_user_role ur
        on u.id = ur.user_id
        left join t_role r
        on ur.role_id = r.id
        where r.role_name = '客户经理'
        and u.is_valid = 1
        and ur.is_valid = 1
        and r.is_valid = 1
    </select>

    <select id="getUserById" resultMap="BaseResultMap" parameterType="int">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id}
    </select>

    <select id="getUserByName" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where user_name = #{userName}
    </select>

    <update id="updateByParams" parameterType="user">
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="userPwd != null">
                user_pwd = #{userPwd},
            </if>
            <if test="trueName != null">
                true_name = #{trueName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid},
            </if>
            update_date = now(),
        </set>
        where id = #{id}
    </update>

    <update id="updateUser" parameterType="user">
        update t_user
        set user_name = #{userName},true_name = #{trueName},email = #{email},
        phone = #{phone},update_date = #{updateDate}
        where id = #{id} and is_valid=1
    </update>

    <update id="updatePwd" parameterType="user">
        update t_user
        set user_pwd = #{userPwd}
        where id = #{id}
  </update>


    <insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(user_name,user_pwd,true_name,email,phone,is_valid,create_date,update_date)
        values(#{userName},#{userPwd},#{trueName},#{email},#{phone},#{isValid},#{createDate},#{updateDate})
    </insert>

    <delete id="delete" parameterType="int">
        delete from t_user
        where id = #{id}
    </delete>

<!--    <delete id="delete" parameterType="int">-->
<!--        update t_user set is_valid=0-->
<!--        where id = #{id}-->
<!--    </delete>-->
</mapper>